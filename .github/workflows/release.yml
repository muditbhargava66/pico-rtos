name: Release Automation

on:
  push:
    tags:
      - 'v*'

jobs:
  build-release:
    name: Build Release (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false  # Prevent automatic cancellation of other matrix jobs if one fails
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            install-deps: |
              sudo apt-get update
              sudo apt-get install -y --no-install-recommends gcc-arm-none-eabi cmake ninja-build libusb-1.0-0-dev
              arm-none-eabi-gcc --version  # Verify installation
              pkg-config --cflags libusb-1.0  # Verify libusb
          - os: macos-latest
            install-deps: |
              brew update
              brew tap armmbed/homebrew-formulae || true
              brew install armmbed/formulae/arm-none-eabi-gcc cmake ninja libusb || brew reinstall armmbed/formulae/arm-none-eabi-gcc cmake ninja libusb
              arm-none-eabi-gcc --version  # Verify installation
              # Optional: Check headers without failing the step
              ls /opt/homebrew/Cellar/arm-none-eabi-gcc/*/arm-none-eabi/include || echo "Header directory not found, but proceeding"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: ${{ matrix.install-deps }}
    
    - name: Configure and build
      run: |
        python3 scripts/build.py configure --build-type Release --enable-examples
        python3 scripts/build.py build
    
    - name: Run tests
      run: python3 tests/build_system_test.py
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pico-rtos-${{ github.ref_name }}-${{ matrix.os }}
        path: |
          build/libpico_rtos.a
          build/*.uf2
          build/*.elf

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-release
    if: success()
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: pico-rtos-${{ github.ref_name }}-ubuntu-latest
        path: artifacts/ubuntu
    
    - name: Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: pico-rtos-${{ github.ref_name }}-macos-latest
        path: artifacts/macos
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Pico-RTOS ${{ github.ref_name }}
        body: |
          Automated release for ${{ github.ref_name }}
          - Built on Ubuntu and macOS
          - All tests passed
          - Artifacts attached
        draft: false
        prerelease: false
